name: Digital Ocean Deploy on Pull Request Merged

on:
  pull_request:
    branches: [master]
    types: [closed]

jobs:
  verify:
    name: Check whether a pull request has been merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - 
        name: Success Message
        run: echo "ðŸŽ‰ A pull request is merged by ${{ github.event.pull_request.merged_by.login}}"

  deploy:
    needs: [verify]
    name: Deploy to Digital Ocean
    runs-on: ubuntu-latest
    outputs:
      app-url: ${{ steps.set-output.outputs.app_url }} 
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v4
      - 
        name: Deploy the app
        id: deploy
        uses: digitalocean/app_action/deploy@v2
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          project_id: ${{ secrets.DIGITALOCEAN_PROJECT_ID }}
      -
        name: Extract App URL
        id: set-output
        run: |
            APP_URL=$(echo '${{ steps.deploy.outputs.app }}' | jq -r '.default_ingress')
            echo "app_url=$APP_URL" >> $GITHUB_OUTPUT
            echo "URL obtenida: $APP_URL"
      - 
        name: Update GitHub Deployment
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const url = '${{ steps.set-output.outputs.app_url }}';
            
            const deployment = await github.rest.repos.createDeployment({
              owner,
              repo,
              ref: context.sha,
              environment: 'Production',
              auto_merge: false,
            });

            await github.rest.repos.createDeploymentStatus({
              owner,
              repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: url,
              log_url: url,
              description: 'Successfully deployed to DigitalOcean'
            });
  
  docker:
    needs: [verify, deploy]
    name: Build container image and push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest